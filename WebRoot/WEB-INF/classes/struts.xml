<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
	<package name="struts2" extends="struts-default" namespace="/">
	<!--  -->
	<interceptors>
			<interceptor name="theInterceptor1" class="com.shengsiyuan.interceptor.TheInterceptor1">
				<param name="test">shengsiyuan</param>
			</interceptor>
			
			<interceptor name="theInterceptor2" class="com.shengsiyuan.interceptor.TheInterceptor2">
			</interceptor>
			
			<interceptor name="theInterceptor3" class="com.shengsiyuan.interceptor.TheInterceptor3">
			</interceptor>
			
			<interceptor name="loginInterceptor" class="com.shengsiyuan.interceptor.LoginInterceptor">
			</interceptor>
			
			<interceptor-stack name="myDefaultInterceptorStack">
				<interceptor-ref name="loginInterceptor"></interceptor-ref>
				<interceptor-ref name="defaultStack"></interceptor-ref>
			</interceptor-stack>
			
		</interceptors>
	<!--  	
		<default-interceptor-ref name="myDefaultInterceptorStack"></default-interceptor-ref>
	
	
		<global-results>
			<result name="usernameInvalid">/usernameInvalid.jsp</result>
			<result name="passwordInvalid">/passwordInvalid.jsp</result>
			<result name="login">/error.jsp</result>
		</global-results>
		
		<global-exception-mappings>
			<exception-mapping result="usernameInvalid" exception="com.shengsiyuan.exception.UsernameException"></exception-mapping>
			<exception-mapping result="passwordInvalid" exception="com.shengsiyuan.exception.PasswordException"></exception-mapping>
		</global-exception-mappings>
	-->
		<action name="login" class="com.shengsiyuan.struts2.LoginAction" >
		<!-- 
			<exception-mapping result="usernameInvalid" 
			exception="com.shengsiyuan.exception.UsernameException"></exception-mapping>
			<exception-mapping result="passwordInvalid" 
			exception="com.shengsiyuan.exception.PasswordException"></exception-mapping>
		 -->
			<result name="success">/result.jsp</result>
			<result name="input">/login.jsp</result>
		</action>
		
		<action name="userAction" class="com.shengsiyuan.struts2.UserAction">
			<result name="success">/output.jsp</result>
		</action>
		
		<action name="userAction2" class="com.shengsiyuan.struts2.UserAction2">
			<result name="success">/output.jsp</result>
		</action>
		
		<action name="register" class="com.shengsiyuan.struts2.RegisterAction">
			<result name="success">/registerResult.jsp</result>
			<result name="input">/register.jsp</result>
		</action>
		<!-- action类型若是redirectAction或者chain，则actionName和namespace是必不可少的，否则就会报错。包名上面也要加namespace -->
		<!-- 
		1》redirect:action处理完后重定向到一个视图资源（如：jsp页面），请求参数全部丢失，action处理结果也全部丢失。
		2》redirect-action:action处理完后重定向到一个action，请求参数全部丢失，action处理结果也全部丢失。
		3》chain:action处理完后转发到一个action，请求参数全部丢失，action处理结果不会丢失。
		 -->
		<action name="action1" class="com.shengsiyuan.struts2.action1" method="myExecute">
			<result name="success" type="chain">
     			<param name="actionName">action2</param>
     			<param name="namespace">/</param>
     			<param name="username">${username}</param>
				<param name="password">${password}</param>
				<param name="usernameAndPassword">${usernameAndPassword}</param>
			</result>
			<!-- 在方法过滤拦截器中，如果既没有指定 includeMethods 参数，
			也没有指定 execludeMethods 参数，那么所有的方法都会被拦截，
			也就是说所有的方法都被认为是 includeMethods 的;如果仅仅指定了
			 includeMethods，那么只会拦截 includeMethods 中的方法，
			 没有包含在 includeMethods 中的方法就不会被拦截。 -->
			<interceptor-ref name="theInterceptor2"></interceptor-ref>
			<interceptor-ref name="theInterceptor3">
				<param name="includeMethods">execute</param>
				<!-- 不对这个方法进行拦截，这个方法依然会执行，但是这个拦截器不会执行 -->
				<param name="excludeMethods">myExecute</param>
			</interceptor-ref>
			<interceptor-ref name="defaultStack"></interceptor-ref>
			
		</action>
		
		<action name="action2" class="com.shengsiyuan.struts2.action2">
			<result name="success">action2.jsp</result>
		</action>
		
		<action name="token" class="com.shengsiyuan.struts2.TokenAction">
			<result name="success">/tokenSuccess.jsp</result>
			<result name="invalid.token">/tokenFail.jsp</result>
			<!-- 使用自己自定义的拦截器后，系统默认的拦截器便会失效，从而使系统的某些功能失效，所以要在最后加上默认拦截器 -->
			<interceptor-ref name="token"></interceptor-ref>
			<interceptor-ref name="defaultStack"></interceptor-ref>
		</action>
		
		<action name="fileUpload" class="com.shengsiyuan.struts2.UploadAction">
			<result name="success">/fileUploadResult.jsp</result>
		</action>
		
		<action name="fileUpload2" class="com.shengsiyuan.struts2.UploadAction2">
			<result name="success">/fileUploadResult2.jsp</result>
		</action>
		<!-- filename表示在浏览器端显示的文件名，inputName属性对应DownloadAction中的返回输入流的那个get方法的方法名（把get去除） 
		默认是内联的，即浏览器自动打开可以打开的下载文件，若不要内联，要加上attachment-->
		<action name="downloadFile1" class="com.shengsiyuan.struts2.DownloadAction">
			<result type="stream">
				<param name="contentDisposition">attachment;filename="新建文本文档.txt"</param>
				<param name="inputName">DownloadFile</param>
			</result>
		</action>
		
		<action name="downloadFile2" class="com.shengsiyuan.struts2.DownloadAction2">
			<result type="stream">
				<param name="contentDisposition">attachment;filename=${filename}</param>
				<param name="inputName">DownloadFile</param>
			</result>
		</action>
		
	</package>
	
	<package name="hello" extends="struts-default" namespace="/theNamespace">
		<action name="namespaceAction" class="com.shengsiyuan.struts2.NamespaceAction">
			<result name="success">output.jsp</result>
		</action>
	</package>
	
</struts>

